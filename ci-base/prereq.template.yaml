AWSTemplateFormatVersion: "2010-09-09"
Description: >
  CloudFormation CodePipeline pre-requests.  The template is designed to be very flexible
  to support various use cases.  (multiple stages/cross account/cross region).

Parameters:

  Account1:
    Description: >
      AWS AccountNumber stage 1.
      Setting this to same account to the pipeline account disables cross account
      deployment automatically.  Setting to empty string disables the stage
      entirely.
    Type: String
    Default: ""
    MinLength: 0
    MaxLength: 12
    AllowedPattern: "[0-9]*"
    ConstraintDescription: Must be numberic string or empty.

  Account2:
    Description: >
      AWS AccountNumber stage 2.
      Setting this to same account to the pipeline account disables cross account
      deployment automatically.  Setting to empty string disables the stage
      entirely.
    Type: String
    Default: ""
    MinLength: 0
    MaxLength: 12
    AllowedPattern: "[0-9]*"
    ConstraintDescription: Must be numberic string or empty.

  Account3:
    Description: >
      AWS AccountNumber stage 3.
      Setting this to same account to the pipeline account disables cross account
      deployment automatically.  Setting to empty string disables the stage
      entirely.
    Type: String
    Default: ""
    MinLength: 0
    MaxLength: 12
    AllowedPattern: "[0-9]*"
    ConstraintDescription: Must be numberic string or empty.

  ProjectIdentifier:
    Description: >
      An unique identifier for the project, this parameter must be set to identical value
      for role stacks and pipeline stacks.
    Type: String
    Default: samwise
    MinLength: 1
    MaxLength: 16
    AllowedPattern: "[A-Za-z][A-Za-z0-9]*"
    ConstraintDescription: Only alphanumeric string is allowed.

  PrimaryRegion:
    Description: >
      Primary region for the pipelines, if this is not the same region as the PreReq stack
      being deployed to,  only ArtifactBucket and KMS key will be created.
    Type: String
    Default: us-east-1
    AllowedValues: [
      us-east-2,us-east-1,us-west-1,us-west-2,ap-east-1,ap-south-1,ap-northeast-3,
      ap-northeast-2,ap-southeast-1,ap-southeast-2,ap-northeast-1,ca-central-1,
      cn-north-1,cn-northwest-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,eu-north-1,
      me-south-1,sa-east-1,us-gov-east-1,us-gov-west-1
    ]

  SecondaryRegion:
    Description: >
      Secondary region for the pipelines, specify to empty string disables secondary region.
      Otherwise, setting this to region where secondary pre-req stack is created.
    Type: String
    Default: ""
    AllowedValues: ["",
      us-east-2,us-east-1,us-west-1,us-west-2,ap-east-1,ap-south-1,ap-northeast-3,
      ap-northeast-2,ap-southeast-1,ap-southeast-2,ap-northeast-1,ca-central-1,
      cn-north-1,cn-northwest-1,eu-central-1,eu-west-1,eu-west-2,eu-west-3,eu-north-1,
      me-south-1,sa-east-1,us-gov-east-1,us-gov-west-1
    ]

  SecondaryArtifactBucket:
    Description: >
      Secondary region artifact bucket, required when SecondaryRegion is not empty.
    Type: String
    Default: ""

  SecondaryKMSKey:
    Description: >
      ARN for secondary region KMS secret key, required when SecondaryRegion is not empty.
    Type: String
    Default: ""

  PermissionsBoundary:
    Description: >
      ARN of the policy used to set the permissions boundary for the canned CloudFormation
      deploy role, which assumes administrator access.
      Setting this to empty string disables PermissionsBoundary.
    Type: String
    Default: ""

#Metadata:
#  AWS::CloudFormation::Interface:
#    ParameterGroups:
#      - Label:
#          default: Project Configuration
#        Parameters:
#          - ProjectIdentifier
#      - Label:
#          default: Account Configuration
#        Parameters:
#          - Account1
#          - Account2
#          - Account3
#      - Label:
#          default: Region Configuration
#        Parameters:
#          - PrimaryRegion
#          - SecondaryArtifactBucket
#          - SecondaryKMSKey
#      - Label:
#          default: Misc
#        Parameters:
#          - PermissionsBoundary
#    ParameterLabels:
#      ProjectIdentifier:
#        default: Project Identifier
#      Account1:
#        default: Account 1
#      Account2:
#        default: Account 2
#      Account3:
#        default: Account 3
#      PrimaryRegion:
#        default: Primary Region
#      SecondaryArtifactBucket:
#        default: Secondary Artifact Bucket
#      SecondaryKMSKey:
#        default: Secondary KMS Key
#      PermissionsBoundary:
#        default: Permissions Boundary

Conditions:
  #  Detect "same account" situation
  CrossAccount1Condition: !Not [!Equals [!Ref Account1, !Ref "AWS::AccountId"]]
  CrossAccount2Condition: !Not [!Equals [!Ref Account2, !Ref "AWS::AccountId"]]
  CrossAccount3Condition: !Not [!Equals [!Ref Account3, !Ref "AWS::AccountId"]]

  # Stages to enable
  EnableStage1Condition: !Not [!Equals [!Ref Account1, ""]]
  EnableStage2Condition: !Not [!Equals [!Ref Account2, ""]]
  EnableStage3Condition: !Not [!Equals [!Ref Account3, ""]]

  # Cross region
  IsPrimaryRegionConditon: !Equals [!Ref PrimaryRegion, !Ref "AWS::Region"]
  UseSecondaryRegionConditon: !Not [!Equals [!Ref SecondaryRegion, ""]]

  # Misc
  PermissionsBoundaryCondition: !Not [!Equals [!Ref PermissionsBoundary, ""]]


Resources:

  #
  # Encryption
  #
  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used by assumed roles in target accounts to Encrypt/Decrypt artifact
      Enabled: true
      EnableKeyRotation: true
      PendingWindowInDays: 7
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          - Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:TagResource
              - kms:UntagResource
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: "*"
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              AWS:
                - !If [ EnableStage1Condition, !Sub "arn:aws:iam::${Account1}:root", !Ref "AWS::NoValue" ]
                - !If [ EnableStage2Condition, !Sub "arn:aws:iam::${Account2}:root", !Ref "AWS::NoValue" ]
                - !If [ EnableStage3Condition, !Sub "arn:aws:iam::${Account3}:root", !Ref "AWS::NoValue" ]
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/${ProjectIdentifier}-CodeBuildServiceRole"
                - !Sub "arn:aws:iam::${AWS::AccountId}:role/${ProjectIdentifier}-CodePipelineServiceRole"
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"

  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${ProjectIdentifier}-${AWS::Region}
      TargetKeyId: !Ref KMSKey

  #
  # Source bundle bucket
  #
  SourceBucket:
    Condition: IsPrimaryRegionConditon
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref KMSAlias

  CloudTrailBucket:
    Condition: IsPrimaryRegionConditon
    Type: AWS::S3::Bucket

  CloudTrailBucketPolicy:
    Condition: IsPrimaryRegionConditon
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CloudTrailBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AWSCloudTrailAclCheckÂ·
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt CloudTrailBucket.Arn
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub ${CloudTrailBucket.Arn}/AWSLogs/${AWS::AccountId}/*
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  #
  # Pipeline artifact and build cache
  #
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref KMSAlias
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            Prefix: codebuild-cache/
            ExpirationInDays: 7

  ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Deny
            Principal: "*"
            Action:
              - s3:PutObject
            Resource: !Sub ${ArtifactBucket.Arn}/*
            Condition:
              StringEquals:
                "s3:x-amz-server-side-encryption": AES256
          - Sid: RequiresKMS
            Effect: Deny
            Principal: "*"
            Action: s3:PutObject
            Resource: !Sub ${ArtifactBucket.Arn}/*
            Condition:
              StringNotLikeIfExists:
                "s3:x-amz-server-side-encryption-aws-kms-key-id": !GetAtt KMSKey.Arn
          - Sid: AllowCrossAccountRead
            Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject
            Resource: !Sub ${ArtifactBucket.Arn}/*
            Principal:
              AWS:
                - !If [ EnableStage1Condition, !Ref Account1, !Ref "AWS::NoValue" ]
                - !If [ EnableStage2Condition, !Ref Account2, !Ref "AWS::NoValue" ]
                - !If [ EnableStage3Condition, !Ref Account3, !Ref "AWS::NoValue" ]

  #
  # Notifications
  #
  NotificationTopic:
    Condition: IsPrimaryRegionConditon
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "${ProjectIdentifier} CodePipeline Notification"

  NotificationTopicPolicy:
    Condition: IsPrimaryRegionConditon
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Sid: AllowCrossAccountPublish
          Effect: Allow
          Principal:
            AWS:
              - !Ref AWS::AccountId
              - !If [ EnableStage1Condition, !Ref Account1, !Ref "AWS::NoValue" ]
              - !If [ EnableStage2Condition, !Ref Account2, !Ref "AWS::NoValue" ]
              - !If [ EnableStage3Condition, !Ref Account3, !Ref "AWS::NoValue" ]
          Action: sns:Publish
          Resource: !Ref NotificationTopic
      Topics:
        - !Ref NotificationTopic

  #
  # Roles
  #
  CodePipelineServiceRole:
    Condition: IsPrimaryRegionConditon
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectIdentifier}-CodePipelineServiceRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub codepipeline.${AWS::URLSuffix}
            Action:
              - sts:AssumeRole
      Path: /

  CodeBuildServiceRole:
    Condition: IsPrimaryRegionConditon
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectIdentifier}-CodeBuildServiceRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub codebuild.${AWS::URLSuffix}
            Action:
              - sts:AssumeRole
      Path: /

  # See https://docs.aws.amazon.com/codepipeline/latest/userguide/how-to-custom-role.html#view-default-service-role-policy
  CodePipelineCannedPolicy:
    Condition: IsPrimaryRegionConditon
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-CodePipelineCannedPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - iam:PassRole
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - !Sub cloudformation.${AWS::URLSuffix}
                  - !Sub elasticbeanstalk.${AWS::URLSuffix}
                  - !Sub ec2.${AWS::URLSuffix}
                  - !Sub ecs-tasks.${AWS::URLSuffix}
            Effect: Allow
            Resource: "*"
          - Action:
              - codecommit:CancelUploadArchive
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:UploadArchive
            Effect: Allow
            Resource: "*"
          - Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetApplication
              - codedeploy:GetApplicationRevision
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
            Effect: Allow
            Resource: "*"
          - Action:
              - elasticbeanstalk:*
              - ec2:*
              - elasticloadbalancing:*
              - autoscaling:*
              - cloudwatch:*
              - s3:*
              - sns:*
              - cloudformation:*
              - rds:*
              - sqs:*
              - ecs:*
            Effect: Allow
            Resource: "*"
          - Action:
              - lambda:InvokeFunction
              - lambda:ListFunctions
            Effect: Allow
            Resource: "*"
          - Action:
              - opsworks:CreateDeployment
              - opsworks:DescribeApps
              - opsworks:DescribeCommands
              - opsworks:DescribeDeployments
              - opsworks:DescribeInstances
              - opsworks:DescribeStacks
              - opsworks:UpdateApp
              - opsworks:UpdateStack
            Effect: Allow
            Resource: "*"
          - Action:
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate
            Effect: Allow
            Resource: "*"
          - Action:
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild
            Effect: Allow
            Resource: "*"
          - Action:
              - devicefarm:ListProjects
              - devicefarm:ListDevicePools
              - devicefarm:GetRun
              - devicefarm:GetUpload
              - devicefarm:CreateUpload
              - devicefarm:ScheduleRun
            Effect: Allow
            Resource: "*"
          - Action:
              - servicecatalog:ListProvisioningArtifacts
              - servicecatalog:CreateProvisioningArtifact
              - servicecatalog:DescribeProvisioningArtifact
              - servicecatalog:DeleteProvisioningArtifact
              - servicecatalog:UpdateProduct
            Effect: Allow
            Resource: "*"
          - Action:
              - ecr:DescribeImages
            Effect: Allow
            Resource: "*"
      Roles:
        - !Ref CodePipelineServiceRole

  CodePipelinePolicy:
    Condition: IsPrimaryRegionConditon
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
            Resource:
              - !Sub ${ArtifactBucket.Arn}/*
              - !If
                - UseSecondaryRegionConditon
                - !Sub "arn:aws:s3:::${SecondaryArtifactBucket}/*"
                - !Ref AWS::NoValue
          - Effect: Allow
            Action:
              - s3:GetBucketPolicy
              - s3:ListBucket
            Resource:
              - !Sub ${ArtifactBucket.Arn}
              - !Sub ${SourceBucket.Arn}
              - !If
                - UseSecondaryRegionConditon
                - !Sub "arn:aws:s3:::${SecondaryArtifactBucket}"
                - !Ref AWS::NoValue
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              - !GetAtt KMSKey.Arn
              - !If
                - UseSecondaryRegionConditon
                - !Ref SecondaryKMSKey
                - !Ref AWS::NoValue
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: !GetAtt CloudFormationDeployRole.Arn
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !If [ EnableStage1Condition, !Sub "arn:aws:iam::${Account1}:role/${ProjectIdentifier}-CrossAccountRole", !Ref "AWS::NoValue" ]
              - !If [ EnableStage2Condition, !Sub "arn:aws:iam::${Account2}:role/${ProjectIdentifier}-CrossAccountRole", !Ref "AWS::NoValue" ]
              - !If [ EnableStage3Condition, !Sub "arn:aws:iam::${Account3}:role/${ProjectIdentifier}-CrossAccountRole", !Ref "AWS::NoValue" ]
          - Effect: Allow
            Action:
              - sns:Publish
            Resource:
              - !Ref NotificationTopic
      Roles:
        - !Ref CodePipelineServiceRole

  CodeBuildPolicy:
    Condition: IsPrimaryRegionConditon
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "*"
          - Action:
              - ecr:DescribeImages
              - ecr:BatchCheckLayerAvailability
              - ecr:CompleteLayerUpload
              - ecr:GetAuthorizationToken
              - ecr:InitiateLayerUpload
              - ecr:PutImage
              - ecr:UploadLayerPart
            Effect: Allow
            Resource: "*"
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !GetAtt KMSKey.Arn
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
            Resource:
              - !Sub ${ArtifactBucket.Arn}/*
              - !If
                - UseSecondaryRegionConditon
                - !Sub "arn:aws:s3:::${SecondaryArtifactBucket}/*"
                - !Ref AWS::NoValue
          - Effect: Allow
            Action:
              - s3:GetBucketPolicy
              - s3:ListBucket
            Resource:
              - !Sub ${ArtifactBucket.Arn}
              - !If
                - UseSecondaryRegionConditon
                - !Sub "arn:aws:s3:::${SecondaryArtifactBucket}"
                - !Ref AWS::NoValue
      Roles:
        - !Ref CodeBuildServiceRole

  CloudFormationDeployRole:
    Condition: IsPrimaryRegionConditon
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub cloudformation.${AWS::URLSuffix}
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      PermissionsBoundary: !If [ PermissionsBoundaryCondition, !Ref PermissionsBoundary, !Ref "AWS::NoValue" ]

Outputs:
  StackName:
    Description: Name of the current stack
    Value: !Ref AWS::StackName

  ProjectIdentifier:
    Description: Project Identifier
    Value: !Ref ProjectIdentifier
    Export:
      Name: !Sub ${AWS::StackName}:ProjectIdentifier

#  KmsKeyId:
#    Description: KMS Key ID
#    Value: !Ref KMSKey
#    Export:
#      Name: !Sub ${AWS::StackName}:KmsKeyId

  KmsKeyArn:
    Description: KMS Key ARN
    Value: !GetAtt KMSKey.Arn
    Export:
      Name: !Sub ${AWS::StackName}:KmsKeyArn

  KeyAlias:
    Description: Key Alias
    Value: !Ref KMSAlias
    Export:
      Name: !Sub ${AWS::StackName}:KeyAlias

  SourceBucket:
    Condition: IsPrimaryRegionConditon
    Description: Source bucket name
    Value: !Ref SourceBucket
    Export:
      Name: !Sub ${AWS::StackName}:SourceBucket
      
  SourceBucketArn:
    Condition: IsPrimaryRegionConditon
    Description: Source bucket arn
    Value: !GetAtt SourceBucket.Arn
    Export:
      Name: !Sub ${AWS::StackName}:SourceBucketArn

  CloudTrailBucket:
    Condition: IsPrimaryRegionConditon
    Description: CloudTrail bucket name
    Value: !Ref CloudTrailBucket
    Export:
      Name: !Sub ${AWS::StackName}:CloudTrailBucket
      
  CloudTrailBucketArn:
    Condition: IsPrimaryRegionConditon
    Description: CloudTrail bucket arn
    Value: !GetAtt CloudTrailBucket.Arn
    Export:
      Name: !Sub ${AWS::StackName}:CloudTrailBucketArn

  ArtifactBucket:
    Description: Artifact bucket name
    Value: !Ref ArtifactBucket
    Export:
      Name: !Sub ${AWS::StackName}:ArtifactBucket

  ArtifactBucketArn:
    Description: Artifact bucket arn
    Value: !GetAtt ArtifactBucket.Arn
    Export:
      Name: !Sub ${AWS::StackName}:ArtifactBucketArn

  CodePipelineRoleArn:
    Condition: IsPrimaryRegionConditon
    Description: CodePipeline role ARN
    Value: !GetAtt CodePipelineServiceRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}:CodePipelineRoleArn

  CodeBuildRoleArn:
    Condition: IsPrimaryRegionConditon
    Description: CodeBuild role ARN
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}:CodeBuildRoleArn

  CloudFormationDeployRoleArn:
    Condition: IsPrimaryRegionConditon
    Description: CloudFormation Stack role ARN
    Value: !GetAtt CloudFormationDeployRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}:CloudFormationDeployRoleArn

  NotificationTopic:
    Condition: IsPrimaryRegionConditon
    Description: Pipeline notification topic name
    Value: !GetAtt NotificationTopic.TopicName
    Export:
      Name: !Sub ${AWS::StackName}:NotificationTopic

  NotificationTopicArn:
    Condition: IsPrimaryRegionConditon
    Description: Pipeline notification topic ARN
    Value: !Ref NotificationTopic
    Export:
      Name: !Sub ${AWS::StackName}:NotificationTopicArn

  PrimaryRegion:
    Description: Primary region
    Value: !Ref PrimaryRegion
    Export:
      Name: !Sub ${AWS::StackName}:PrimaryRegion

  SecondaryRegion:
    Condition: UseSecondaryRegionConditon
    Description: Secondary region
    Value: !Ref SecondaryRegion
    Export:
      Name: !Sub ${AWS::StackName}:SecondaryRegion

  SecondaryArtifactBucket:
    Condition: UseSecondaryRegionConditon
    Description: Secondary artifact bucket name
    Value: !Ref SecondaryArtifactBucket
    Export:
      Name: !Sub ${AWS::StackName}:SecondaryArtifactBucket

  SecondaryArtifactBucketArn:
    Condition: UseSecondaryRegionConditon
    Description: Secondary artifact bucket ARN
    Value: !Sub arn:aws:s3:::${SecondaryArtifactBucket}
    Export:
      Name: !Sub ${AWS::StackName}:SecondaryArtifactBucketArn

  SecondaryKmsKeyArn:
    Condition: UseSecondaryRegionConditon
    Description: Secondary KMS Key ARN
    Value: !Ref SecondaryKMSKey
    Export:
      Name: !Sub ${AWS::StackName}:SecondaryKmsKeyArn
